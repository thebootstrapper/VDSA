# Generated by Django 2.0.5 on 2019-01-15 22:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=64)),
                ('mdp', models.CharField(max_length=64)),
                ('nom', models.CharField(blank=True, max_length=64, null=True)),
                ('prenom', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'Admin',
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.AuthGroup')),
            ],
            options={
                'db_table': 'auth_group_permissions',
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.AuthGroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.AuthUser')),
            ],
            options={
                'db_table': 'auth_user_groups',
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.AuthPermission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.AuthUser')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('date_inscription', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Client',
            },
        ),
        migrations.CreateModel(
            name='Commercial',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=64)),
                ('mdp', models.CharField(max_length=64)),
                ('nom', models.CharField(blank=True, max_length=64, null=True)),
                ('prenom', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'Commercial',
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
            },
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=14)),
                ('marge', models.DecimalField(decimal_places=2, max_digits=11)),
                ('idmagasinvdsa', models.CharField(db_column='idMagasinVDSA', max_length=1)),
                ('idclient', models.ForeignKey(db_column='idClient', on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.Client')),
                ('idcommercial', models.ForeignKey(db_column='idCommercial', on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.Commercial')),
            ],
            options={
                'db_table': 'Facture',
            },
        ),
        migrations.CreateModel(
            name='Famille',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'Famille',
            },
        ),
        migrations.CreateModel(
            name='Localisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cp', models.PositiveIntegerField()),
                ('ville', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'Localisation',
            },
        ),
        migrations.CreateModel(
            name='Magasinvdsa',
            fields=[
                ('id', models.CharField(max_length=1, primary_key=True, serialize=False)),
                ('nom_magasin', models.CharField(max_length=64)),
                ('email_directeur', models.CharField(blank=True, max_length=64, null=True)),
                ('mdp_directeur', models.CharField(blank=True, max_length=64, null=True)),
                ('nom_directeur', models.CharField(blank=True, max_length=64, null=True)),
                ('prenom_directeur', models.CharField(blank=True, max_length=64, null=True)),
                ('idlocalisation', models.ForeignKey(db_column='idLocalisation', on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.Localisation')),
            ],
            options={
                'db_table': 'MagasinVDSA',
            },
        ),
        migrations.CreateModel(
            name='Sousfamille',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=64, null=True)),
                ('idfamille', models.ForeignKey(blank=True, db_column='idFamille', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.Famille')),
            ],
            options={
                'db_table': 'SousFamille',
            },
        ),
        migrations.AddField(
            model_name='facture',
            name='idsousfamille',
            field=models.ForeignKey(blank=True, db_column='idSousFamille', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.Sousfamille'),
        ),
        migrations.AlterUniqueTogether(
            name='djangocontenttype',
            unique_together={('app_label', 'model')},
        ),
        migrations.AddField(
            model_name='djangoadminlog',
            name='content_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.DjangoContentType'),
        ),
        migrations.AddField(
            model_name='djangoadminlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.AuthUser'),
        ),
        migrations.AddField(
            model_name='client',
            name='idlocalisation',
            field=models.ForeignKey(blank=True, db_column='idLocalisation', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.Localisation'),
        ),
        migrations.AddField(
            model_name='client',
            name='idmagasinvdsa',
            field=models.ForeignKey(db_column='idMagasinVDSA', on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.Magasinvdsa'),
        ),
        migrations.AddField(
            model_name='authpermission',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.DjangoContentType'),
        ),
        migrations.AddField(
            model_name='authgrouppermissions',
            name='permission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='con_ins.AuthPermission'),
        ),
        migrations.AlterUniqueTogether(
            name='client',
            unique_together={('id', 'idmagasinvdsa')},
        ),
        migrations.AlterUniqueTogether(
            name='authuseruserpermissions',
            unique_together={('user', 'permission')},
        ),
        migrations.AlterUniqueTogether(
            name='authusergroups',
            unique_together={('user', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='authpermission',
            unique_together={('content_type', 'codename')},
        ),
        migrations.AlterUniqueTogether(
            name='authgrouppermissions',
            unique_together={('group', 'permission')},
        ),
    ]
